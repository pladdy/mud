#!/usr/bin/env bash

# scrict mode
set -o errexit -o nounset -o pipefail
IFS=$'\n\t'

USE_TMUX=0
PROFILE=""

##
# thanks to Killergate on 3k for the below commands!
##
play_with_tmux() {
  local profile=$1

  if [ -z $(which tmux) ]; then
    echo "Need to install tmux to play with -t option"
    exit 1
  fi

  tmux -v new-session -d -s tintin "tt++ profiles/${profile}"
  tmux split-window -h -l 120 -t tintin "./watch-map"
  tmux select-pane -t 0
  tmux -2 attach-session -t tintin
}

usage() {
  declare -a lines=(
    "Synopsis:"
    "  This is a wrapper to call tintin++ using a profile."
    ""
    "Options:"
    "  -h this message"
    "  -p [required] the profile you want to use"
    "  -t use tmux to split screen; map will be on the right and session"
    "     on the left"
    ""
    "Examples"
    "  $0 -p foo_bar    # play 3k with the foo_bar profile"
    "  $0 -t -p foo_bar # play 3k with the foo_bar profile in tmux"
  )
  for line in "${lines[@]}"; do echo "${line}"; done
}

valid_profiles() {
  printf "Valid profile : guild for profile:\n"

  for profile in $(ls profiles); do
    local profile_name=$(echo ${profile} | sed 's/.tin//')
    local guild=$(grep 'var guild ' profiles/${profile} | sed 's/.*{//' | sed 's/};//')
    echo "  ${profile_name} : ${guild}"
  done
}

while getopts 'thp:' opt; do
  case "${opt}" in
    h)
      usage
      exit 0
      ;;
    p)
      PROFILE="${OPTARG}"
      PROFILE_FILE=${PROFILE}.tin
      ;;
    t) USE_TMUX=1;;
  esac
done

if [ $# -gt 0 ] && [ -f "profiles/${PROFILE_FILE}" ]; then
  rm -f tin/map/map_globals.txt

  if [ "${USE_TMUX}" == "1" ]; then
    PROFILE=${PROFILE} play_with_tmux ${PROFILE_FILE}
  else
    PROFILE=${PROFILE} tt++ profiles/${PROFILE_FILE}
  fi
else
  printf "Need a valid profile name.\n\n"
  valid_profiles
  echo
  usage
  exit 1
fi

