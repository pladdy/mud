#alias _angel_hpbar {
  #var hp {%1};
  #var hp_max {%2};

  #var sp {%3};
  #var sp_max {%4};

  #var gp1 {%7};
  #var gp1_max {%8};

  #var gp2 {%9};
  #var gp2_max {%10};

  #var time_slices {%5};
  #var time_slices_max {%6};
  #var corpses {%11};

  #var enemy {%13};
  #replace {enemy} { } {};
  #replace {enemy} {%} {};
  #if {"$enemy" == ""} {#var enemy {0}};

  #var circle {false};
  #var parried false;

  #local MIN_DIV 50;
  #local MIN_END 20;

  #if {$gp1 < $MIN_DIV && $corpses > 0 && $enemy > 0} {redi};
  #if {$gp2 < $MIN_END && $corpses > 0 && $enemy > 0} {reri};

  attempt_radiance;
  attempt_beyond_time;
  attempt_renewed_light;
  show_trainings;
  check_stepper;
}

#action {^%!{[> ]*}H: %1/%2 S: %3/%4 T: %5/%6 D: %7/%8 E: %9/%10 C: %11/%12 En:%13$} {
  _angel_hpbar %1 %2 %3 %4 %5 %6 %7 %8 %9 %10 %11 %12 %13;
}

#nop  No coffin hpbar;
#action {^%!{[> ]*}H: %1/%2 S: %3/%4 T: %5/%6 D: %7/%8 E: %9/%10 C: %11 %12 En:%13$} {
  _angel_hpbar %1 %2 %3 %4 %5 %6 %7 %8 %9 %10 %11 %12 %13;
}

#action {^%!{[> ]*}HO: %1/%2 HI: %3/%4 LO: %5/%6 LI: %7/%8 R: %9 G: %10} {
  #if { @length{%9} > 0} {#var retributions %9};
  #else {#var retributions 0};

  #var gxp {%10};
  #replace {gxp} {%} {};

  show_status_bar;

  #if { @length{%1} > 0 } {
    #var advantages[ho] %1;
    #var advantages[hi] %3;
    #var advantages[lo] %5;
    #var advantages[li] %7;

    sort_advantages;

    #if {$time_slices <= $min_ts && @distance_closed{}} {attempt_circle};
    #else {
      attempt_swing;
      attempt_presage;
      attempt_providence;
    };

    attempt_disengage;
  };
}

#nop This action only fires when there's distance between me and a mob;

#action {^%!{[> ]*}Di: |{-*}{M|P}{-*}{M|P}{-*}|} {
  #local MAX_ROUNDS_DISENGAGED 0;
  #var angel[distance] @length{%3};

  #if {$angel[distance] > 0} {
    #math {rounds_disengaged} {$rounds_disengaged + 1};
  } {
    #var rounds_disengaged 0;
  };

  #if {$angel[distance] > 0
       && $rounds_disengaged > $MAX_ROUNDS_DISENGAGED
       && "$use_engage" == "true"} {
    #send !engage;
    #math {angel[distance]} {$angel[distance] - 1};
  };

  #nop Based on distance boundary, set if disengage is possible;
  #regexp {%0} {^%!{[> ]*}Di: |{-+}{M|P}{-*}{M|P}{-+}} {
    #var can_disengage true;
  } {
    #regexp {%0} {^%!{[> ]*}Di: |MP{-+}} {
      #var can_disengage true;
    } {
      #regexp {%0} {^%!{[> ]*}Di: |{-+}PM|} {
        #var can_disengage true;
      } {
        #var can_disengage false;
      };
    };
  };

  #nop Based on distance to a wall set traverse distance;
  #regexp {%0} {^%!{[> ]*}Di: |{-+}P} {
    #nop log.info Traverse distance, to left of M: @length{%1};
    #var traverse_distance @length{%1};
  } {
    #regexp {%0} {^%!{[> ]*}Di: |{.+}P{-+}|} {
      #nop log.info Traverse distance, to right of M: @length{%5};
      #var traverse_distance @length{%5};
    };
  };

  attempt_dive;
}

#action {^%!{[> ]*}%1 advances!} {
  #if {$angel[distance] > 0} {
    #math {angel[distance]} {$angel[distance] - 1}
  };
}
