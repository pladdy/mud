#alias attempt_combat_spell {
  #if {"$combat_spell" == "on"} {
    #math {min_combat_spell_sps} {$sp_max * .2};
    #math {min_combat_spell_hps} {$hp_max * .75};
    #if {$sp > $min_combat_spell_sps && $hp > $min_combat_spell_hps} {
      !0;
    };
  }
}

#alias attempt_hardened_skin {
  #local MIN_ROUNDS 10;
  #local MIN_SP 80;
  #if {$spells[hard_skin] <= $MIN_ROUNDS && $sp > $MIN_SP} {
    ceca hardened skin;
  };
}

#alias attempt_heartening_laugh {
  #if {$gp1 > 250 && "$heartening_laugh" == "off"} {hl};
}

#alias attempt_hypnotic_pattern {
  #local MIN_SP 100;
  #if {$sp > $MIN_SP && "$hypnotic_pattern" != "on"} {
    ceca hypnotic pattern;
  }
}

#alias attempt_mind_blank {
  #local MIN_SP 100;
  #if {$spells[mind_blank] <= 0 && $sp > $MIN_SP} {
    ceca mind blank;
  };
}

#alias attempt_noxious_cloud {
  #local MIN_SP 100;
  #if {$sp > $MIN_SP && "$noxious_cloud" != "on"} {
    ceca noxious cloud;
  }
}

#alias attempt_o_muse {
  #local MIN_ROUNDS 10;
  #if {$songs[o_muse] <= $MIN_ROUNDS} {!perform o muse};
}

#alias attempt_protection_evil {
  #local MIN_ROUNDS 10;
  #local MIN_SP 40;

  #if {$sp > $MIN_SP && $spells[pe] < $MIN_ROUNDS} {ceca protection from evil};
}

#alias attempt_protection_good {
  #local MIN_ROUNDS 10;
  #local MIN_SP 40;

  #if {$sp > $MIN_SP && $spells[pg] < $MIN_ROUNDS} {ceca protection from good};
}

#alias attempt_protection_neutral {
  #local MIN_ROUNDS 10;
  #local MIN_SP 40;

  #if {$sp > $MIN_SP && $spells[pn] < $MIN_ROUNDS} {ceca protection from neutral};
}

#alias attempt_protection_frost {
  #local MIN_ROUNDS 10;
  #local MIN_SP 200;
  #if {$spells[protection_frost] <= $MIN_ROUNDS && $sp > $MIN_SP} {
    ceca protection from frost;
  };
}

#alias attempt_protection_heat {
  #local MIN_ROUNDS 10;
  #local MIN_SP 200;
  #if {$spells[protection_heat] <= $MIN_ROUNDS && $sp > $MIN_SP} {
    ceca protection from heat;
  };
}

#alias attempt_spasmodic_shuffle {
  #local MIN_SP 100;
  #if {$sp > $MIN_SP && "$spasmodic_shuffle" != "on"} {
    ceca spasmodic shuffle;
  }
}

#alias attempt_soothe {
  #math {min_combat_spell_sps} {$sp_max * .2};

  #if {$sp < $min_combat_spell_sps && $gp1 > 20} {
    cepo soothe;
  }
}

#alias attempt_tb {
  #local MIN_GP1_RATIO .95;
  #math {gp1_ratio} { ($gp1 * 1.00) / $gp1_max};
  #if {$gp1_ratio >= $MIN_GP1_RATIO} {!thunderous bellow};
}

#alias attempt_wings {
  #local MIN_SP 200;
  #if {"$wings_of_the_phoenix" != "on" && $sp > $MIN_SP} {
    ceca wings of the phoenix;
    !land;
  };
}

#alias ce {
  #if {"$performing_instrumental_attack" == "on" || "$performing_acapella_attack" == "on"} {
    !setpanic bandage at 75%;
    !rhythmic actions 1 cease;
    #var performing_instrumental_attack off;
    #var performing_acapella_attack off;
    #var combat_spell off;
  };
  !cease;
  !wear shield;
}

#nop cease and cast;
#alias ceca {
  !cease;
  !cast %0;
}

#alias cepo {
  !cease;
  !%0;
}

#alias commands_after_corpse {
  #var hypnotic_pattern off;
  #var noxious_cloud off;
}

#alias deup {
  !hp;
  attempt_hardened_skin;
  #delay 2 attempt_protection_evil;
  #delay 4 attempt_protection_good;
  #delay 6 attempt_protection_neutral;
  #delay 8 attempt_protection_heat;
  #delay 10 attempt_protection_frost;
  #delay 12 attempt_mind_blank;
  #delay 14 attempt_o_muse;
}

#alias di {
  !perform dirge;
}

#alias f10 {use_corpse}

#alias f12 {
  #if {$map[current_room] == 13692} {
    #loop 2 12 i {!donate all from bag $i};
  } {
    #loop 2 12 i {!sell all from bag $i};
  }
}

#alias kt {
  #local MIN_KARMA_TAP 20;
  #if {%1} {!karma tap %1} {!karma tap $MIN_KARMA_TAP};
}

#alias hl {
  !heartening laugh;
  #delay 3600 {ceca hl};
}

#alias linkdie_commands {hl}
#alias login_commands {hl}

#alias mgp {
  #nop arg1: hp/sp, arg2: percentage, arg3: command;

  #if {"%1" == "hp"} {#math {mystic_guardian_points} {$hp_max * %2 / 100}};
  #elseif {"%1" == "sp"} {#math {mystic_guardian_points} {$sp_max * %2 / 100}};

  #format {mystic_guardian_points} {%d} {$mystic_guardian_points};
  !mg at %1/$mystic_guardian_points/%3;
}

#nop Orinoco flow ports you and stops interaction with mud...brief me is changed;
#nop so it's easier to tell how many rounds of song have elapsed.;
#alias of {
  !bset briefme 0;
  !perform orinoco flow;
  #delay {60} {!bset briefme 1};
}

#alias paa {perform_acapella_attack %0}

#alias perform_acapella_attack {
  #local song %0;

  #if {"$performing_acapella_attack" != "on"} {
    #showme <170>Performing '$song';

    !setpanic so at 85%;
    !$song;
    alias ras rhythmic actions 1 $song:5/ras;
    !ras;

    #var performing_acapella_attack on;
  };
  #elseif {"$performing_acapella_attack" == "on"} {
    #showme <170>Stopping '$song';
    ce;
  };
}

#nop Takes 1 arg, a mud alias to perform a song (Ex: perform toxic blades);
#alias perform_instrumental_attack {
  #local song %0;

  #if {"$performing_instrumental_attack" != "on"} {
    #showme <170>Performing '$song';

    !setpanic cu at 90%;
    !$song;
    alias ras rhythmic actions 1 $song:5/ras;
    !ras;

    #var performing_instrumental_attack on;
    #var combat_spell on;
  };
  #elseif {"$performing_instrumental_attack" == "on"} {
    #showme <170>Stopping '$song';
    ce;
  };
}

#alias pia {perform_instrumental_attack %0}

#alias redi {
  !unwrap;
  use_corpse;
}

#alias resb {
  !unwrap;
  !cast soul bead;
  !keep bead;
}

#alias use_corpse {
  !hp;
  !cease;
  #if {$gp1 == $gp1_max} {kt};
  di;
  !hp;
  !f;
}
