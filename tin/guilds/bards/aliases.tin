#alias attempt_noxious_cloud {
  #local MIN_SP 100;
  #if {$sp > $MIN_SP && "$noxious_cloud" != "on"} {
    ceca noxious cloud;
  }
}

#alias attempt_combat_spell {
  #if {"$combat_spell" == "on"} {
    #math {min_combat_spell_sps} {$sp_max * .4};
    #math {min_combat_spell_hps} {$hp_max * .75};
    #if {$sp > $min_combat_spell_sps && $hp > $min_combat_spell_hps} {
      !0;
    };
  }
}

#alias attempt_hardened_skin {
  #local MIN_ROUNDS 10;
  #local MIN_SP 80;
  #if {$spells[hard_skin] <= $MIN_ROUNDS && $sp > $MIN_SP} {
    ceca hardened skin;
  };
}

#alias attempt_hypnotic_pattern {
  #local MIN_SP 100;
  #if {$sp > $MIN_SP && "$hypnotic_pattern" != "on"} {
    ceca hypnotic pattern;
  }
}

#alias attempt_mind_blank {
  #local MIN_SP 100;
  #if {$spells[mind_blank] <= 0 && $sp > $MIN_SP} {
    ceca mind blank;
  };
}

#alias attempt_o_muse {
  #local MIN_ROUNDS 10;
  #if {$songs[o_muse] <= $MIN_ROUNDS} {!perform o muse};
}

#alias attempt_protection_align {
  #local MIN_ROUNDS 10;
  #local MIN_SP 40;

  #if {$sp > $MIN_SP && $spells[protection_align] < $MIN_ROUNDS} {
    #if {"$protection_align[evil]" == "on"} {ceca protection from evil};
    #if {"$protection_align[good]" == "on"} {ceca protection from good};
    #if {"$protection_align[neutral]" == "on"} {ceca protection from neutral};
  };
}

#alias attempt_protection_frost {
  #local MIN_ROUNDS 10;
  #local MIN_SP 200;
  #if {$spells[protection_frost] <= $MIN_ROUNDS && $sp > $MIN_SP} {
    ceca protection from frost;
  };
}

#alias attempt_protection_heat {
  #local MIN_ROUNDS 10;
  #local MIN_SP 200;
  #if {$spells[protection_heat] <= $MIN_ROUNDS && $sp > $MIN_SP} {
    ceca protection from heat;
  };
}

#alias attempt_spasmodic_shuffle {
  #local MIN_SP 100;
  #if {$sp > $MIN_SP && "$spasmodic_shuffle" != "on"} {
    ceca spasmodic shuffle;
  }
}


#alias attempt_tb {
  #if {$gp1 == $gp1_max} {!thunderous bellow};
}

#alias band {
  !remove shield;
  !perform leader of the band;
}

#nop cease and cast;
#alias ceca {
  !cease;
  !cast %0;
}

#alias commands_after_corpse {
  #var hypnotic_pattern off;
  #var noxious_cloud off;
}

#alias di {
  !remove shield;
  !perform dirge;
  !wear shield;
}

#alias f10 {use_corpse}

#alias f12 {
  #if {$map[current_room] == 13692} {
    #loop 2 12 i {!donate all from bag $i};
  } {
    #loop 2 12 i {!sell all from bag $i};
  }
}

#alias kt {
  #local MIN_KARMA_TAP 20;
  #if {%1} {!karma tap %1} {!karma tap $MIN_KARMA_TAP};
}

#alias mgp {
  #nop arg1: hp/sp, arg2: percentage, arg3: command;

  #if {"%1" == "hp"} {#math {mystic_guardian_points} {$hp_max * %2 / 100}};
  #elseif {"%1" == "sp"} {#math {mystic_guardian_points} {$sp_max * %2 / 100}};

  #format {mystic_guardian_points} {%d} {$mystic_guardian_points};
  !mg at %1/$mystic_guardian_points/%3;
}

#alias pacid {
  perform_instrumental_attack pacid;
}

#nop Orinoco flow ports you and stops interaction with mud...brief me is changed;
#nop so it's easier to tell how many rounds of song have elapsed.;
#alias pflow {
  !remove shield;
  !bset briefme 0;
  !perform orinoco flow;
  #delay {60} {!bset briefme 1};
}

#alias phero {
  !remove shield;
  !perform hero;
}

#alias pns {
  !remove shield;
  !perform naked sunday;
}

#alias psmile {
  !remove shield;
  !perform smile;
}

#nop Takes 1 arg, a mud alias that should be for performing a song;
#alias perform_instrumental_attack {
  #local song %0;

  #if {"$performing_instrumental_attack" != "on"} {
    #showme <170>Performing '$song';

    !setpanic cu at 90%;
    !remove shield;
    !$song;
    alias ras rhythmic actions 1 $song:5/ras;
    !ras;

    #var performing_instrumental_attack on;
    #var combat_spell on;
  };
  #elseif {"$performing_instrumental_attack" == "on"} {
    #showme <170>Stopping '$song';

    !setpanic bandage at 75%;
    !cease;
    !wear shield;
    !rhythmic actions 1 cease;
    #var performing_instrumental_attack off;
    #var combat_spell off;
  };
}

#alias psol {perform_instrumental_attack psol}

#alias redi {
  !unwrap;
  use_corpse;
}

#alias use_corpse {
  !hp;
  !cease;
  #if {$gp1 == $gp1_max} {kt};
  di;
  !hp;
  !f;
}
