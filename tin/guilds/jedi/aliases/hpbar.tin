#alias attempt_dissipate_attack {
  #local MIN_ENERGY 2000;

  #if {"$dissipating" == "false"
       && $enemy > 0
       && $dissipates > 0
       && $energy > $MIN_ENERGY} {
    #send !focus dissipate on attack;
  };
}

#alias attempt_mindblock {
  #if {"$mindblock" == "no" && $enemy > 0} {
    focus mindblock;
    #var mindblock {yes};
  }
}

#alias check_stepper {
  #local MIN_CONC 20;
  #local MIN_FORCE 20;

  #if {"$stepper" == "on" && ($gp1 < $MIN_CONC || $gp2 < $MIN_FORCE)} {
    stepper off;

    log.info Creating delay 're_step' to activate stepper after regen.;

    #local min_rounds 50;
    #math rando {1 d 20};
    #math regen_time {$min_rounds + $rando};

    #delay {re_step} {
      log.info "Re-activating stepper after regen time: $regen_time.";
      stepper on;
    } {$regen_time};

    #uunvar rando;
    #unvar regen_time
  }
}
