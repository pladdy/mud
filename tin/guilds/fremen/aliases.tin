#alias adjust_litany {
  #if {"$adjust_litany" == "on"} {
    #var adjust_litany off;
  };
  #else {
    #var adjust_litany on;
  }
}

#alias am {
  #send !hide;
  #send !poison;
  #send !fk m %0;
}

#alias attempt_adjust_litany {
  #math {hp_as_pct} {($hp * 1.00)/ $hp_max};

  #nop Litany settings: low, some, minor, half, major, most, high, all;

  #if {$hp_as_pct < 0.90 && $hp_as_pct >= 0.80 && $adjusted_litany_leve != 1} {
    #send !assault none;litany major;assault;
    #var adjusted_litany_level 1;
  };
  #elseif {$hp_as_pct < 0.80 && $hp_as_pct >= 0.70 && $adjusted_litany_leve != 2} {
    #send !assault none;litany most;assault;
    #var adjusted_litany_level 2;
  };
  #elseif {$hp_as_pct < 0.70 && $hp_as_pct >= 0.60 && $adjusted_litany_leve != 3} {
    #send !assault none;litany high;assault;
    #var adjusted_litany_level 3;
  };
  #elseif {$hp_as_pct < 0.60 && $adjusted_litany_leve != 4} {
    #send !assault none;litany all;assault;
    #var adjusted_litany_level 4;
  };
}

#alias attempt_stun {
  #math {hp_as_pct} {($hp * 1.00)/ $hp_max};

  #if {$enemy > 10 && $hp_as_pct < 1.0 && "$stun_active" != "true"} {
    #send !stun;
  };
}

#alias commands_after_corpse {
  #send !suspend;
  #var stun_active false;
  #var voice_active false;
}

#alias count_available_spices {
  #list spice_inv_queue size available_inv_spices;
  #list spice_bag_queue size available_bag_spices;
  #math available_spices {$available_inv_spices + $available_bag_spices};
}

#alias drc {
  holster_weapons;
  #send !draw crysknife;
}

#alias drcp {
  holster_weapons;
  #send !draw crysknife;
  #send !do loop combat agony;
}

#alias drl {
  holster_weapons;
  #send !draw lasgun;
  #send !attacks normal;
  #send !reflexes blinding;
  #send !attacks;
}

#alias drm {
  holster_weapons;
  #send !draw maula pistol;
  #send !attacks normal;
  #send !reflexes blinding;
  #send !attacks;
}

#alias drp {
  holster_weapons;
  #send !draw pulse sword;
}

#alias f10 {use_corpse}

#alias f12 {
  #if {$map[current_room] == 8187} {
    #showme <170>Keeping all to avoid donating wrong things!;
    #send !keep all;
    #loop 2 $BAGS_TO_USE i {
      #send !get all from bag $i;
      #send !donate all;
    };
  };
  #else {
    #loop 2 $BAGS_TO_USE i {#send !sell all from bag $i};
  };
}

#alias holster_weapons {
  #send !sheathe knife;
  #send !sheathe sword;
  #send !holster gun;
  #send !do clear;
}

#alias rerc {
  #send !unwrap;
  #send !reclaim;
  #send !hp;
}

#alias refi {
  #send !unwrap;
  #send !fai;
}

#alias respice {
  #if {$available_inv_spices > 0} {
    #list spice_inv_queue get 1 spice_task;

    #if {$spice_task} {
      #send !$spice_task;
      #list spice_inv_queue delete 1;
    };
  };
  #elseif {$available_bag_spices > 0} {
    #list spice_bag_queue get 1 spice_task;

    #nop  Try to get drink/spice from bag;
    #regexp {$spice_task} {%!{(drink|take)} {[a-z]+}} {#var drink &2};

    gb $drink 1;
    #send !$spice_task;
    #list spice_bag_queue delete 1;
  };
  #else {
    log.warn No spices left!;
  }
}

#alias spice_chk {
  #nop  Checking inventory clears the spice_*_queues;
  #send !i;
  #send !l bag;
}

#alias spices {
  #list spice_inv_queue clear;
  #list spice_bag_queue clear;
  spice_chk;
  #delay {2} {#var spice_inv_queue; #var spice_bag_queue};
};

#alias use_corpse {
  #local MAX_WATER_RATIO 1.2;

  #send !glance;
  #send !hp;
  #if {$total_water_pct < $MAX_WATER_RATIO} {#send !reclaim} {#send !fai};
  #send !hp;
}

#alias wimpy_commands {
  #send !hide;
  #send !suspend;
}
