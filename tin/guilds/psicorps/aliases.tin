#alias attempt_actuation {
    #nop Defense first;
    #regex {$powers_str} { Vr} {#nop;} {#send !vr};
    #nop #regex {$powers_str} { Bf} {#nop;} {#send !bf};

    #nop Offense;
    #regex {$powers_str} { Tl} {#nop;} {#send !tl};
    #nop #regex {$powers_str} { Cg} {#nop;} {#send !cg};
    #nop #regex {$powers_str} { Bo} {#nop;} {#send !bo};
    #regex {$powers_str} { Ij} {#nop;} {#send !ij};
    #regex {$powers_str} { bc} {#nop;} {#send !bc};

    #nop Perks;
    #nop #regex {$powers_str} { Vg} {#nop;} {#send !vg};
    #regex {$powers_str} { Vv} {#nop;} {#send !vv};
    #nop #regex {$powers_str} { AA} {#nop;} {#send !aa bull};
}

#alias f10 {use_corpse};

#alias f12 {
  #loop 2 8 i {#send !sell all from bag $i};
}

#alias fr {
  #if {"%0" == "reset"} {
    #unvar fold_reality_active;
    #unvar fold_reality_location;
    #return;
  };

  #send !fold reality;
}

#alias pause_active_stepper {
  #local MIN_PSI 100;
  #local MIN_STAM 50;
  #local REGEN_SECONDS 60;

  #if {($enemy > 0 && "$stepper" == "on" && "$pause" != "true") &&
       ($gp1 < $MIN_PSI || $gp2 < $MIN_STAM)} {
    dtrig stepper off,#delay $REGEN_SECONDS {stepper on;#unvar pause};
    #var pause true;
  };
}

#alias use_corpse {
  #send !hp;
  #send !eat corpse;
  #send !hp;
  #send !get all;
}

#alias resp {
  #send !unwrap smallest;
  #send !eat corpse;
}
