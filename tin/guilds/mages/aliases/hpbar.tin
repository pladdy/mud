#alias attempt_explosive_release {
  #if {$enemy > 0 && $gp1 < 10 && $school_spells > 0} {
    #send !er;
  };
  #elseif {"$immersed" == "false" && $school_spells > 0 && $gp1 < 35} {
    #if {$sp < 2000 && $mystic_immersions <= 0} {
      #send !er;
    };
  };
  #elseif {$enemy > 0 && $school_reset >= 98 && $school_spells > 0} {
    #send !er;
  };
}

#alias attempt_focus_mind {
  #if {$gp2 < 25 && $sp > 1000} {#send !cast focus mind};
}

#nop MIs reset every 600 rounds (20 min);
#nop MIs last 90 rounds (3 min);
#nop MIs lasts about 15% of a reset when used;

#alias attempt_mystic_immersion {
  #if {"$immersed" == "false"
       && $mystic_immersions > 0
       && $sp < 800
  } {mim};
  #elseif {
    $guild_reset > 85
    && $mystic_immersions > 0
    && "$immersed" == "false"
  } {mim};
  #elseif {
    $guild_reset > 70
    && $mystic_immersions > 1
    && "$immersed" == "false"
  } {mim};
}

#alias attempt_shelter {
  #if {$enemy > 0 && @combat_rounds_left{} > 10
       && $corpses == 0
       && $sp < 600
       && $mystic_immerions < 1
  } {
    #send !cast secure shelter;
  };
}

#alias attempt_slow {
  #if {$enemy > 0 && $slowed != 1 && @combat_rounds_left{} > 10} {
    #send !cast slow
  };
}

#alias check_concentration {
  #nop when hpbar processes gp vars, it 'flips' them;
  #if {$gp2 <= 30} {#showme <110>CONCENTRATION IS HIGH!!!};
  #if {$gp2 <= 20} {#send !shoo};
}

#alias check_saturation {
  #nop when hpbar processes gp vars, it 'flips' them;
  #if {$gp1 <= 10} {
    #showme <110>SATURATION IS HIGH!!!;
    #if {$corpses > 0} {rebl};
  };
  #if {$gp1 <= 5} {
    #if {"$stepper" == "on"} {stepper off};
    #send !cast secure shelter;
  };
}

#alias check_stepper {
  #if {"$stepper" == "on"
       && "$immersed" == "false"
       && $mystic_immersions == 0
       && $sp < 2000
       && $school_spells == 0
       && $gp1 <= 25
  } {stepper off};
  #else {
    #format {current_time} {%T};
    #math {time_since_stepper_started} {$current_time - $stepper_started};
  
    #if {"$stepper" == "on" && $time_since_stepper_started > 750 } {
      stepper off;
  
      log.info Creating delay 'reactivate_stepper' to activate stepper after regen.;
  
      #nop Round is seconds * 2 (2s / round);
      #local min_seconds 10;
      #math rando {1 d 20};
      #math regen_time {$min_seconds + $rando};
  
      #delay {reactivate_stepper} {
        log.info "Re-activating stepper after regen time: $regen_time seconds.";
        stepper on;
      } {$regen_time};
  
      #unvar rando;
    };
  };
}

#alias slowed {
  #var slowed 1;
}
