#alias =call {
  #send =call;
  #send =afollow on;
}

#alias =send {
  #send =afollow off;
  #send =send;
}

#alias attempt_recharge {
  #math {half_gp1} {$gp1 / 2};
  #math {gp1p} {$gp1 / $gp1_max * 1.00};
  #math {gp2p} {$gp2 / $gp2_max * 1.00};
  #if {$rounds_in_combat > 0 && $gp2 > $half_gp1} {#send !recharge};
  #elseif {$gp2p > 0.8 && $gp1p < .95} {#send !recharge};
}

#alias check_stepper {
  #if {$corpses < 1 && "$stepper" == "on"} {stepper off};
  #else {
    #format {current_time} {%T};
    #math {time_since_stepper_started} {$current_time - $stepper_started};

    #if {"$stepper" == "on" && $time_since_stepper_started > 750} {
      stepper off;

      log.info Creating delay 'reactivate_stepper' to activate stepper after regen.;

      #nop Round is seconds * 2 (2s / round);
      #local min_seconds 10;
      #math rando {1 d 20};
      #math regen_time {$min_seconds + $rando};

      #delay {reactivate_stepper} {
        log.info "Re-activating stepper after regen time: $regen_time seconds.";
        stepper on;
      } {$regen_time};

      #unvar rando;
    };
  };
}

#alias commands_after_corpse {
  #send !repair;
  #send !stabilize;
  #send !tactical;
}

#alias conform_bias {
  #if {@length{%2} > 0} {
    #send !biaslock;
    #send !conform %1 bias %2;
  } {
    #showme need a number between 0 - 190;
  }
}

#alias cona {conform_bias attack %1;}
#alias cond {conform_bias defense %1;}

#alias en {
  #send !switchddb sonic;
  #send !switch sonicator;
  #send !aset synthorg himagenta;
  #send !aset ddb himagenta;
  #send !=swap sonic;
}

#alias f6 {
  #send !wimpy 0;
  #send !autoguild surge;
  #send !timeslide %1;
  #send !pheal 1 hmheal;

  #send !meditate;
  #delay {2} {#send !surge};
  #delay {3} {#send !surge};
  #delay {4} {#send !surge};
  #delay {5} {#send !surge};
  #delay {6} {#send !surge};
  #delay {7} {
    #send !wimpy 40;
    #send !autoguild surge;
    #send !pheal 1500 surge;
  }
}

#alias f8 {
  #map run smithy;
  #send !buy longsword;
  #send !keep longsword;
  #send !wield longsword;
  dcor;
}

#alias mip_combat_hook {
  attempt_recharge;
  #if {$gp1 < 3000 && $corpses > 0} {repu};
  check_stepper;
}

#alias mip_gline1_hook {
  #local data %0;
  #nop CPC:<w10000>/10000 G2N:536215(46%) RC[10915305] Reset(<w4%>) TS:2/2 E-TS:1;
  #regexp {$data} {G2N:{\d+}(%d%)} { #math {gxp1} {1000000 - &1} };
  #regexp {$data} {RC[{\d+}]} { #var gxp2 {&1} };
  #var {gxp_last} {$gxp};
  #math {gxp} {$gxp1 + $gxp2};
}

#alias mip_gline2_hook {
  #local data %0;
  #nop Bias[<sLocked>] Atk(<r180%>) Def(<c10%>) <wEfield>(<y4min>) Edna(<w16min>) Illum(<cOFF>);
  #nop;
}

#alias not_defined {
  #nop Get backpacks;

  run gentech;
  e;
  u;
  w;
  w;

  #loop 1 10 loop {
    buy 4;
    rename backpack to bag;
  };
  #send !keep all bag;
}

#alias f10 {
  use_corpse;
  #send !get all;
}

#alias f12 {
  #if {$map[current_room] == 676} {
    #loop 2 $BAGS_TO_USE i {#send !trash all from bag $i};
  } {
    #loop 2 $BAGS_TO_USE i {#send !sell all from bag $i};
  }
}

#alias fi {
  #send !switchddb thermal;
  #send !switch laser;
  #send !aset synthorg hired;
  #send !aset ddb hired;
  #send !=swap thermal;
}

#nop Useful against HC mage, 3 dmg types to spread out hits;
#alias hca {
  #send !switchddb thermal;
  #send !aset ddb hired;

  #send !switch shocker;
  #send !aset synthorg yellow;
}

#alias repu {
  #send !unwrap smallest;
  #send !recharge;
  #send !reclaim;
  #send !recharge;
}

#alias tme {f6 emergency}

#alias ttl_stepper_hook {#nop}

#alias use_corpse {
  #send !hp;
  #send !recharge;
  #send !reclaim;
  #send !hp;
}

#alias wimpy_commands {
  #send !surge;
}
