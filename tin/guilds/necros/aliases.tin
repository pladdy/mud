#alias ani {
  log.debug creating follower;
  #send !qtrance follower;
  #send !=name mojo;
  #var follower_blocked false;
}

#alias attempt_call {
  log.debug attempting call;

  #if {$enemy > 0 && "$familiar_called" != "true"} {
    #send !call;
    #var familiar_called true;
  };
}

#alias attempt_dart {
  log.debug attempting dart;
  #if {$enemy > 0 && "$can_dart" == "true" && $gp1p > $spp} {cd};
}

#alias attempt_dream {
  log.debug attempting dream;
  #if {$enemy > 0 && $spp < .5} {#send !z};
}

#alias attempt_preserve {
  log.debug attempting preserve;

  #if {$ncorpses < $MAX_NECRO_CORPSES && $corpses > 0} {
    rep;
  };
}

#alias attempt_protection {
  log.debug attempting protection;
  #if {$enemy > 0 && "$protection" == "OFF"} {#send !pro};
}

#alias attempt_spark {
  log.debug attempting spark;
  #if {$glamors > 0 && $spp < .6 && "$glamor_active" != "true"} {#send !spark};
}

#alias attempt_refill_corpses {
  #if {$ncorpses < $MIN_NECRO_CORPSES
       && $follower_corpses > 0
       && "$follower_blocked" == "false"
      } {
    log.info Attempting to refill corpses.;
    #send !gfc;
  }
}

#alias attempt_unload_corpses {
  #if {$ncorpses >= $MAX_NECRO_CORPSES
       && "$necro_follower" != "none"
       && $follower_corpses < $MAX_FOLLOWER_CORPSES
       && "$follower_blocked" == "false"
      } {
    log.info Attempting to unload corpses.;
    #send !pfc;
  }
}

#alias cd {
  #send !create dart 100;
  #send !dart;
}

#alias commands_after_corpse {
  #var familiar_called false;
}

#alias dncor {
  run ncorpses;
  #send !unkeep all corpse;
  #send !store all;
  #if {"$necro_follower" != "none"} {
    #delay 4 {
      #send !=give all;
      #send !store all;
      #send !lookup;
    };
  };
  #else {
    #send !lookup;
  }
}

#alias f10 {
  use_corpse;
  #send !f;
}

#alias f12 {
  #if {$map[current_room] == 26817} {
    #loop 2 $BAGS_TO_USE i {
      #send !donate all from bag $i;
    };
  } {
    #loop 1 $BAGS_TO_USE i {
      #send !sell all from bag $i;
    };
  };
}

#nop  Avoid using qtrance to get all from chest;
#alias gcs {
  #send !retrieve;
  #send !open chest;
  #send !get all from chest;
  #send !close chest;
  #send !deliver;
}

#alias reab {
  #send !unwrap smallest;
  #send !ab;
}

#alias reabf {
  #send !unwrap smallest;
  #send !freeze;
  #send !ab;
}

#alias reabb {
  #send !unwrap smallest;
  #send !abb;
}

#alias reabbf {
  #send !unwrap smallest;
  #send !freeze;
  #send !abb;
}

#alias rep {
  #send !unwrap smallest;
  #send !p;
}

#alias relog_commands {
  #nop  Assumes 'gmore inventory' is not paging;
  #send !powers;
}

#alias use_corpse {
  #if {$ncorpses < $MAX_NECRO_CORPSES} {p};
  #else {
    #if {$hpp < $spp} {#send !abb};
    #else {#send !ab};
  };
}
