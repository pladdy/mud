#alias ansi {
  #send !ansi %1;

  #if {"%1" == "off"} {
    #send !ansi off;
    mset attack bkblack;
    mset dodge bkblack;
    mset pressure bkblack;
    mset stun bkblack;
    mset palm bkblack;
    mset isn bkblack;
    mset blur bkblack;
    mset crit bkblack;
    mset throw bkblack;
  } {
    #send !ansi on;
    mset attack white;
    mset dodge hicyan;
    mset pressure hiblack;
    mset stun yellow;
    mset palm himagenta;
    mset isn hiblack;
    mset blur hiblue;
    mset crit hired;
    mset throw brown;
  }
}

#alias attempt_enervate {
  #local MIN_CHI 40;
  #if {$gp1 < ${MIN_CHI}} {en};
}

#alias attempt_focus {
  #nop mind drops to 'clear' at 180;
  #local MIN_MIND 250;
  #local FOCUS_AMOUNT 10;

  #if {$enemy > 0 && $gp2 < $MIN_MIND && $focus > 0} {
    #send !focus $FOCUS_AMOUNT;
  };
}

#alias attempt_palm {
  #if {@combat_rounds_left{} > 15
       && $rounds_in_combat > 1
       && "$auto_palm" == "true"
       && $ancient_energy > 1
       && "$palm_active" != "true"} {
    #send !palm;
  };
  #elseif {@combat_rounds_left{} > 4
           && $reset > 90
           && "$auto_palm" == "true"
           && $ancient_energy > 0
           && "$palm_active" != "true"} {
    #send !palm;
  };
}

#alias attempt_pressure {
  #if {$enemy > 0 && "$pressure" == "off"} {
    #send !pressure;
    #nop reduce sp so i don't throw same round i pressure;
    #math {sp} {$sp - 1};
  };
}

#alias attempt_throw {
  #local MIN_CHI 90;
  #if {$sp == $sp_max
       && $gp1 > $MIN_CHI
       && $enemy > 0
       && "$can_throw" == "true"} {
    #send !throw;
  };
}

#alias auto_palm {
  #if {"$auto_palm" != "true"} {
    #showme <170>Auto palm enabled.;
    #var auto_palm true;
  };
   #else {
    #showme <170>Auto palm disabled.;
    #var auto_palm false;
  }
}

#alias auto_throw {
  #if {"$can_throw" != "true"} {
    #showme <170>Throw enabled.;
    #var can_throw true;
  };
   #else {
    #showme <170>Throw disabled.;
    #var can_throw false;
  }
}

#alias check_stepper {
  #if {"$stepper" == "on" && $gp2 < $MIN_MIND} {
    log.warn Turnning stepper off.  Mind: $gp2, Stepper: $stepper;
    stepper off;
    dtrig f2;
  };
  #elseif {$corpses < 1 && "$stepper" == "on"} {stepper off};
  #else {
    #format {current_time} {%T};
    #math {time_since_stepper_started} {$current_time - $stepper_started};
  
    #if {"$stepper" == "on" && $time_since_stepper_started > 750} {
      stepper off;
  
      log.info Creating delay 'reactivate_stepper' to activate stepper after regen.;
  
      #nop Round is seconds * 2 (2s / round);
      #local min_seconds 10;
      #math rando {1 d 20};
      #math regen_time {$min_seconds + $rando};
  
      #delay {reactivate_stepper} {
        log.info "Re-activating stepper after regen time: $regen_time seconds.";
        stepper on;
      } {$regen_time};
  
      #unvar rando;
    };
  };
}

#alias commands_after_corpse {
  #var pressure {off};
  #var palm_active {false};
  #var can_throw {true};
  #send !meditate;
}

#alias en {
  #if {%0 > 0 } {#send !enervate %0};
  #else {#send !enervate 200};
  #2 {#send !hands};
}

#alias linkdie_commands {
  #send !gs;
};

#alias f10 {
  use_corpse;
  #send !get all;
}

#alias f12 {
  #if {$map[current_room] == 11358} {
    #loop 2 12 loop {
      #send !get all from bag $loop;
      #send !sacrifice all;
    };
  };
  #else {
    #loop 2 12 loop {#send !sell all from bag $loop};
  };
}

#alias mm {
  #var keep_meditating true;
  #send meditate;
}

#alias reet {
  #send !unwrap;
  #send !study corpse;
  #send !eat corpse;
}

#alias resp {reet}
#alias rest {reet}

#alias resps {#loop 1 5 loop {reet};}

#alias use_corpse {
  #send !study corpse;
  #send !eat corpse;
  #send !hp;
}

#alias wimpy_commands {
  #delay 2 {#send !meditate;}
}
