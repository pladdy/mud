#function choose_a_dir {
  #list cardinal_exits size index_count;

  #math {random_index} {1 d $index_count};
  #return $cardinal_exits[$random_index];
}

#nop This does a loop on all non monsters.  It's done this way because the key;
#nop can be a wild card match for a monster name;

#function mob_is_blacklisted {
  #local monster %0;
  #var result false;

  #foreach { $non_monsters[%*] } {non_monster} {
    #if {"$non_monster" == ""} {#continue};

    #nop tintin regex;
    #regexp {$monster} {%i$non_monster} {#replace result {false} {true}};

    #nop pcre regex;
    #format {monster_lc} {%l} {$monster};
    #regexp {$monster_lc} {%!{$non_monster}} {#replace result {false} {true}};

    log.debug checking '$monster' vs '$non_monster', match? '$result';

    #if {"$result" == "true"} {
      log.debug '$monster' is blacklisted based on '$non_monster', skipping;
      #break;
    };
  };

  #unvar non_monster;
  #return $result;
}

#function transform_mob {
  #var transform_mob false;
  #regexp {%0} {zombie} {#var transform_mob zombie};
  #regexp {%0} {deep one} {#var transform_mob deep one};
  #regexp {%0} {rimalkin} {#var transform_mob rimalkin};
  #regexp {%0} {duke} {#var transform_mob duke};
  #regexp {%0} {%d of hearts} {#var transform_mob card};
  #regexp {%0} {lama of} {#var transform_mob lama};
  #regexp {%0} {shaman of} {#var transform_mob shaman};
  
  #if {"$transform_mob" != "false"} {
    #return $transform_mob;
  };
  #else {
    #regexp {%0} {^%ia {.+}} {#var transform_mob &1} {#var transform_mob %0};
    #nop Replace any text in '{}' braces, like 'Orc Sergeant {bloodlust}';
    #replace {transform_mob} { {{.+}}} {};
    #nop Try to multiple words with last word;
    #replace {transform_mob} {{.+} {.+}$} {&2};
  }
  #return $transform_mob;
}

#alias test_blacklist {
  #local monster %0;

  load_non_monsters;
  #showme Testing monster: '$monster';
  #showme Blacklisted: @mob_is_blacklisted{$monster};

  #nop #unvar non_monsters;
}
