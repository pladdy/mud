#action {^%!{[> ]*}%1 gasps for breath, then slumps into death.$} {
  log_and_update_stepper %1;
}

#action {^%!{[> ]*}%1 screeches in agony and falls to the ground, dead.$} {
  log_and_update_stepper %1;
}

#action {^%!{[> ]*}%1 gurgles in %2 own blood as %3 dies.$} {
  log_and_update_stepper %1;
}

#nop  For debugging, regex doesn't use anchors.;
#action {%1 dealt the killing blow to %2$} {
  #var last_killer %1;
  #var last_killed %2;
  log.debug $last_killer has killed $last_killed;
  log_and_respond;
}

#action {^%!{[> ]*}%1 dealt the killing blow to %2$} {
  #var last_killer %1;
  #var last_killed %2;
  log.debug $last_killer has killed $last_killed;
  log_and_respond;
} {1}

#action {^%!{[> ]*}You can see your own dead body from above.$} {
  #map goto cemetery;
}

#action {^%!{[> ]*}Everything slowly fades into blackness...$} {
  #map goto cemetery;
}

#nop  Gemino Mortis;

#action {The mask of Gemino Mortis%1(worn on head)} {
  log.debug Mask of Gemino Mortis equipped.;
  #var gemino_mortis true;
}

#action {The mask of Gemino Mortis%1(worn on head).$} {
  log.debug Mask of Gemino Mortis equipped.;
  #var gemino_mortis true;
}

#action {^%!{[> ]*}You fit the mask on and your eyes glow dimly green} {
  log.debug Mask of Gemino Mortis equipped.;
  #var gemino_mortis true;
}

#action {^%!{[> ]*}Your eyes darken as you remove the mask.} {
  log.debug Mask of Gemino Mortis equipped.;
  #var gemino_mortis false;
}

#nop  If this happens, there's only one corpse;
#action {^%!{[> ]*}%1's eyes glow a sickly green upon the fallen} {
  #regexp {%1} {%i{$character|$summons|$my_dog|tree}} {
    #var gemino_mortis true;
    #undelay mask_killing_blow_timeout;
    respond_to_killing_blow;
    #send !glance;
    #if {"$ktrig_status" == "on"} {f};
  };
}

#nop  If this happens, there are two corpses;
#action {^%!{[> ]*}%1's eyes glow bright green upon the fallen} {
  #regexp {%1} {%i{$character|$summons|$my_dog|tree}} {
    #var gemino_mortis true;
    #undelay mask_killing_blow_timeout;
    #2 respond_to_killing_blow;
    #send !glance;
    #if {"$ktrig_status" == "on"} {f};
  };
}

#nop  Aliases;

#alias btrig {
  #var btrig {%0};
  #replace {btrig} {,} {;};
}

#alias dtrig {
  #var dtrig {%0};
  #replace {dtrig} {,} {;};
}

#nop Append to dtrig;

#alias dtriga {
  #var dtrig {$dtrig,%1};
  #replace {dtrig} {,} {;};
}

#alias ktrig {
  #if {"%0" == "off"} {
    #showme <110>Turning ktrig off, 'ktrig on' to reactivate.;
    #var ktrig_status off;
  };
  #if {"%0" == "on"} {
    #showme <120>Turning ktrig back on.;
    #var ktrig_status on;
  };
}

#alias log_and_respond {
  log.info A kill has occurred: '$last_killer' killed '$last_killed';

  #if {"$gemino_mortis" == "true"} {
    log.info Mask of Gemino Mortis equipped, waiting for corpse duplication.;
    #delay mask_killing_blow_timeout {
      log.warn Mask didn't fire, no corpse.;
      respond_to_killing_blow;
      #send !glance;
      #send !f;
    } {4};
  };
  #else {
    respond_to_killing_blow;
    #send !glance;
  }
}

#alias log_and_update_stepper {
  log.info A mob died: '%0' died;

  #if {"$stepper" == "on"} {
    #delay {mob_died_event} {
      wrap_or_use_corpse;
      #send !glance;
    } {4};
    remove_seen_monster "%0";
    ttl_no_monsters on;
  };
}

#alias respond_to_killing_blow {
  #if {"$stepper" == "on"} {
    #undelay mob_died_event;
  };

  #if { @length{$btrig} > 0 } {
    log.debug running btrig commands: $btrig;
    #foreach {$btrig} {b} {$b;};
    #var btrig {};
  };

  commands_before_corpse;

  #if {"$ktrig_status" == "on"} {
    log.debug checking $last_killer against killers ($character|$summons|$my_dog|tree) that can use corpse;
    #regexp {$last_killer} {%i{$character|$summons|$my_dog|tree}} {
      wrap_or_use_corpse;
      #if {"$party_status" == "yes"} {#send !divvy gold};
      #nop  Assumes an alias 'f' exists to 'get all';
      #if {"$gemino_mortis" != "true"} {#send !f};
      #if {"$stepper" == "on"} {pba};
    };

    #nop Kill Sprints...places to run after a mob dies;

    #switch {"$last_killed"} {
      #case "Cryohydra." {run verbeeg_chief;};
    };
  };

  commands_after_corpse;

  #if { @length{$dtrig} > 0 } {
    log.debug running dtrig commands: $dtrig;
    #if {"$gemino_mortis" == "true"} {
      #delay 2 {
        #foreach {$dtrig} {d} {$d};
        #var dtrig {};
      }
    };
    #else {
      #foreach {$dtrig} {d} {$d};
      #var dtrig {};
    };
  };
}
